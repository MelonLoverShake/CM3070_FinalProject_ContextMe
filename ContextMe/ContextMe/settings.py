"""
Django settings for ContextMe project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from decouple import config, Csv
import os
from pathlib import Path
from supabase import create_client
import dj_database_url
import sentry_sdk

"""
Django settings for ContextMe project.

Generated by 'django-admin startproject' using Django 5.2.
"""

from pathlib import Path
import os
from decouple import config, Csv
import dj_database_url
from supabase import create_client

# Build paths inside the project
BASE_DIR = Path(__file__).resolve().parent.parent


# =====================================================
# SECURITY / ENVIRONMENT VARIABLES
# =====================================================

SECRET_KEY = config('SECRET_KEY')

DEBUG = config('DEBUG', default=False, cast=bool)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='127.0.0.1,localhost', cast=Csv())


# =====================================================
# APPLICATIONS
# =====================================================

INSTALLED_APPS = [
    'captcha',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'login',
    'main',
    'consent',
    'log',
    'Admin',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ContextMe.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ContextMe.wsgi.application'


# =====================================================
# DATABASE
# =====================================================
DATABASE_URL = 'postgresql://postgres.hdvncgemljlwzjnhvmbg:crystal14!@aws-0-ap-southeast-1.pooler.supabase.com:5432/postgres'

DATABASES = {
    'default': dj_database_url.parse(DATABASE_URL)
}

# Add SSL options manually
DATABASES['default']['OPTIONS'] = {
    'sslmode': 'verify-full',
    'sslrootcert': os.path.join(BASE_DIR, 'certs', 'prod-ca-2021.crt')
}


# =====================================================
# SUPABASE 
# =====================================================

SUPABASE_URL = 'https://hdvncgemljlwzjnhvmbg.supabase.co'
SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imhkdm5jZ2VtbGpsd3pqbmh2bWJnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY5NzA0NjQsImV4cCI6MjA2MjU0NjQ2NH0.7jqn_Gn44rcRjrBew8dDd-SzNfsCmP3Vs4q7BuhpOR4'
SUPABASE_SERVICE_ROLE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imhkdm5jZ2VtbGpsd3pqbmh2bWJnIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0Njk3MDQ2NCwiZXhwIjoyMDYyNTQ2NDY0fQ.yTN9D-4cItODDU0k3s6Q_nb-CfzWD-DMKg1WPXgRna8'
supabase = create_client(SUPABASE_URL, SUPABASE_ANON_KEY)


# =====================================================
# AUTHENTICATION / PASSWORDS
# =====================================================

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


# =====================================================
# INTERNATIONALIZATION
# =====================================================

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Singapore'
USE_I18N = True
USE_TZ = True


# =====================================================
# STATIC FILES
# =====================================================

STATIC_URL = 'static/'


# =====================================================
# DEFAULT PRIMARY KEY FIELD TYPE
# =====================================================

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# =====================================================
# RECAPTCHA
# =====================================================

RECAPTCHA_PUBLIC_KEY = config('RECAPTCHA_PUBLIC_KEY')
RECAPTCHA_PRIVATE_KEY = config('RECAPTCHA_PRIVATE_KEY')
RECAPTCHA_REQUIRED_SCORE = config('RECAPTCHA_REQUIRED_SCORE', default=0.85, cast=float)
RECAPTCHA_USE_SSL = config('RECAPTCHA_USE_SSL', default=True, cast=bool)


# =====================================================
# SECURITY HEADERS
# =====================================================

SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
